name: Monster Checkpoint Build (No Wrapper)

on:
  workflow_dispatch:

jobs:
  
  - name: Debug settings.gradle.kts
  run: |
    echo "Listing project root:"
    ls -la .
    echo "Content of settings.gradle.kts:"
    cat settings.gradle.kts || echo "File not found"
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore project (checkpoint)
        run: |
          set -euo pipefail
          mkdir -p app/src/main/java/com/example/aiconsciousness/nav
          mkdir -p app/src/main/res/values

          # settings.gradle.kts
          cat > settings.gradle.kts <<'KTS'
          rootProject.name = "AI-Consciousness"
          include(":app")
          KTS

          # Root build.gradle.kts
          cat > build.gradle.kts <<'KTS'
          plugins {
              id("com.android.application") version "8.2.2" apply false
              id("org.jetbrains.kotlin.android") version "1.9.22" apply false
          }
          KTS

          # App build.gradle.kts
          mkdir -p app
          cat > app/build.gradle.kts <<'KTS'
          plugins {
              id("com.android.application")
              id("org.jetbrains.kotlin.android")
          }

          android {
              namespace = "com.example.aiconsciousness"
              compileSdk = 34

              defaultConfig {
                  applicationId = "com.example.aiconsciousness"
                  minSdk = 24
                  targetSdk = 34
                  versionCode = 1
                  versionName = "1.0"
              }

              buildTypes {
                  release {
                      isMinifyEnabled = false
                  }
              }

              compileOptions {
                  sourceCompatibility = JavaVersion.VERSION_17
                  targetCompatibility = JavaVersion.VERSION_17
              }

              kotlinOptions {
                  jvmTarget = "17"
              }
          }

          dependencies {
              implementation("androidx.core:core-ktx:1.12.0")
              implementation("androidx.activity:activity-compose:1.8.2")
              implementation("androidx.compose.ui:ui:1.6.0")
              implementation("androidx.compose.material3:material3:1.2.0")
              implementation("androidx.navigation:navigation-compose:2.7.7")
          }
          KTS

          # AndroidManifest.xml
          cat > app/src/main/AndroidManifest.xml <<'XML'
          <manifest xmlns:android="http://schemas.android.com/apk/res/android"
              package="com.example.aiconsciousness">

              <uses-permission android:name="android.permission.INTERNET"/>

              <application
                  android:label="AI Consciousness"
                  android:allowBackup="true"
                  android:supportsRtl="true">
                  <activity android:name=".MainActivity">
                      <intent-filter>
                          <action android:name="android.intent.action.MAIN" />
                          <category android:name="android.intent.category.LAUNCHER" />
                      </intent-filter>
                  </activity>
              </application>
          </manifest>
          XML

          # MainActivity.kt
          cat > app/src/main/java/com/example/aiconsciousness/MainActivity.kt <<'KT'
          package com.example.aiconsciousness

          import android.os.Bundle
          import androidx.activity.ComponentActivity
          import androidx.activity.compose.setContent
          import androidx.compose.material3.MaterialTheme
          import com.example.aiconsciousness.nav.AppNavHost

          class MainActivity : ComponentActivity() {
              override fun onCreate(savedInstanceState: Bundle?) {
                  super.onCreate(savedInstanceState)
                  setContent {
                      MaterialTheme {
                          AppNavHost()
                      }
                  }
              }
          }
          KT

          # AppNavHost.kt
          cat > app/src/main/java/com/example/aiconsciousness/nav/AppNavHost.kt <<'KT'
          package com.example.aiconsciousness.nav

          import androidx.compose.material3.Icon
          import androidx.compose.material3.Text
          import androidx.compose.runtime.Composable
          import androidx.compose.ui.graphics.vector.ImageVector
          import androidx.navigation.compose.NavHost
          import androidx.navigation.compose.composable
          import androidx.navigation.compose.rememberNavController
          import androidx.navigation.NavHostController
          import com.example.aiconsciousness.ui.screens.*

          enum class Dest(val route:String, val label:String, val icon: ImageVector) {
              Chat("chat","Chat",androidx.compose.material.icons.Icons.Filled.Chat),
              Models("models","Models",androidx.compose.material.icons.Icons.Filled.Tune),
              Settings("settings","Settings",androidx.compose.material.icons.Icons.Filled.Settings)
          }

          @Composable
          fun AppNavHost(navController: NavHostController = rememberNavController()) {
              NavScaffold(navController) {
                  NavHost(navController, startDestination = Dest.Chat.route) {
                      composable(Dest.Chat.route) { ChatScreen() }
                      composable(Dest.Models.route) { ModelsScreen() }
                      composable(Dest.Settings.route) { SettingsScreen() }
                  }
              }
          }
          KT

          # NavScaffold.kt
          cat > app/src/main/java/com/example/aiconsciousness/nav/NavScaffold.kt <<'KT'
          package com.example.aiconsciousness.nav

          import androidx.compose.material3.*
          import androidx.compose.runtime.Composable
          import androidx.compose.ui.Modifier
          import androidx.navigation.NavHostController
          import androidx.navigation.compose.currentBackStackEntryAsState

          @OptIn(ExperimentalMaterial3Api::class)
          @Composable
          fun NavScaffold(nav: NavHostController, content: @Composable () -> Unit) {
              val route = nav.currentBackStackEntryAsState().value?.destination?.route
              Scaffold(
                  topBar = { CenterAlignedTopAppBar(title = { Text("AI Consciousness") }) },
                  bottomBar = {
                      NavigationBar {
                          NavigationBarItem(
                              selected = route == "chat",
                              onClick = { nav.navigate("chat") },
                              icon = { Icon(Icons.Filled.Chat, contentDescription = null) },
                              label = { Text("Chat") }
                          )
                          NavigationBarItem(
                              selected = route == "models",
                              onClick = { nav.navigate("models") },
                              icon = { Icon(Icons.Filled.Tune, contentDescription = null) },
                              label = { Text("Models") }
                          )
                          NavigationBarItem(
                              selected = route == "settings",
                              onClick = { nav.navigate("settings") },
                              icon = { Icon(Icons.Filled.Settings, contentDescription = null) },
                              label = { Text("Settings") }
                          )
                      }
                  }
              ) { inner ->
                  Surface(modifier = Modifier.padding(inner)) { content() }
              }
          }
          KT

          # colors.xml
          cat > app/src/main/res/values/colors.xml <<'XML'
          <resources>
              <color name="purple_200">#BB86FC</color>
              <color name="purple_500">#6200EE</color>
              <color name="purple_700">#3700B3</color>
              <color name="teal_200">#03DAC5</color>
          </resources>
          XML

          # themes.xml
          cat > app/src/main/res/values/themes.xml <<'XML'
          <resources xmlns:tools="http://schemas.android.com/tools">
              <style name="Theme.AIConsciousness" parent="Theme.Material3.DayNight.NoActionBar">
                  <item name="colorPrimary">@color/purple_500</item>
                  <item name="colorPrimaryVariant">@color/purple_700</item>
                  <item name="colorOnPrimary">@color/teal_200</item>
              </style>
          </resources>
          XML

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Build Debug APK (no wrapper)
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: 8.4
          arguments: :app:assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk
