name: Materialize & Build Android App (AI Consciousness) — Locked M3

on:
  workflow_dispatch:

permissions:
  contents: write   # allow committing generated files

jobs:
  generate_and_build:
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
      BRANCH: feature/ai-consciousness-skeleton
      APP_MODULE: app
      PKG_DIR: app/src/main/java/com/example/aiconsciousness

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Create branch (if not exists)
        run: |
          set -eux
          git checkout -b "$BRANCH" || git checkout "$BRANCH"

      # ────────────────────────────────────────────────────────────────────────
      # Materialize project files (same scaffold as earlier)
      # ────────────────────────────────────────────────────────────────────────
      - name: Scaffold directories
        run: |
          set -eux
          mkdir -p app/src/main/{java/com/example/aiconsciousness/{data,nav,ui/screens,ui/components},res/{values,drawable,mipmap-anydpi-v26}}
          mkdir -p .github/workflows

      - name: settings.gradle.kts
        run: |
          cat > settings.gradle.kts <<'KOT'
          pluginManagement {
            repositories { google(); mavenCentral(); gradlePluginPortal() }
          }
          dependencyResolutionManagement {
            repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
            repositories { google(); mavenCentral() }
          }
          rootProject.name = "AI-Consciousness"
          include(":app")
          KOT

      - name: Root build.gradle.kts (plugin versions)
        run: |
          cat > build.gradle.kts <<'KOT'
          plugins {
            id("com.android.application") version "8.5.2" apply false
            kotlin("android") version "1.9.24" apply false
            kotlin("plugin.serialization") version "1.9.24" apply false
          }
          KOT

      - name: gradle.properties
        run: |
          cat > gradle.properties <<'PROPS'
          org.gradle.jvmargs=-Xmx2g -Dfile.encoding=UTF-8
          android.useAndroidX=true
          kotlin.code.style=official
          PROPS

      - name: app/build.gradle.kts
        run: |
          cat > app/build.gradle.kts <<'KOT'
          plugins {
            id("com.android.application")
            kotlin("android")
            kotlin("plugin.serialization")
          }

          android {
            namespace = "com.example.aiconsciousness"
            compileSdk = 34

            defaultConfig {
              applicationId = "com.example.aiconsciousness"
              minSdk = 24
              targetSdk = 34
              versionCode = 1
              versionName = "1.0"
            }

            buildTypes {
              debug { isMinifyEnabled = false }
              release {
                isMinifyEnabled = true
                proguardFiles(getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro")
              }
            }

            buildFeatures { compose = true }
            composeOptions { kotlinCompilerExtensionVersion = "1.5.15" }

            packaging {
              resources.excludes += setOf("META-INF/DEPENDENCIES","META-INF/LICENSE*","META-INF/NOTICE*")
            }
          }

          dependencies {
            // Compose
            implementation(platform("androidx.compose:compose-bom:2024.10.00"))
            implementation("androidx.compose.ui:ui")
            implementation("androidx.compose.material3:material3")
            implementation("androidx.navigation:navigation-compose:2.8.0")
            implementation("androidx.activity:activity-compose:1.9.2")
            debugImplementation("androidx.compose.ui:ui-tooling")
            implementation("androidx.compose.ui:ui-tooling-preview")

            // Storage & crypto
            implementation("androidx.datastore:datastore-preferences:1.1.1")
            implementation("androidx.security:security-crypto:1.1.0-alpha06")

            // Networking & JSON
            implementation("com.squareup.okhttp3:okhttp:4.12.0")
            implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.3")

            // Coroutines
            implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.8.1")
          }
          KOT

      - name: app/proguard-rules.pro
        run: |
          cat > app/proguard-rules.pro <<'PRO'
          -keep class androidx.compose.** { *; }
          -keep class kotlin.Metadata { *; }
          PRO

      - name: AndroidManifest.xml
        run: |
          cat > app/src/main/AndroidManifest.xml <<'XML'
          <manifest xmlns:android="http://schemas.android.com/apk/res/android">
            <uses-permission android:name="android.permission.INTERNET"/>
            <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>

            <application
                android:label="@string/app_name"
                android:icon="@mipmap/ic_launcher"
                android:roundIcon="@mipmap/ic_launcher_round"
                android:theme="@style/Theme.AIConsciousness">
              <activity
                  android:name=".MainActivity"
                  android:exported="true">
                <intent-filter>
                  <action android:name="android.intent.action.MAIN"/>
                  <category android:name="android.intent.category.LAUNCHER"/>
                </intent-filter>
              </activity>
            </application>
          </manifest>
          XML

      - name: strings.xml
        run: |
          cat > app/src/main/res/values/strings.xml <<'XML'
          <resources>
            <string name="app_name">AI Consciousness</string>
          </resources>
          XML

      - name: themes.xml
        run: |
          cat > app/src/main/res/values/themes.xml <<'XML'
          <resources>
            <style name="Theme.AIConsciousness" parent="Theme.Material3.DayNight.NoActionBar"/>
          </resources>
          XML

      - name: colors.xml
        run: |
          cat > app/src/main/res/values/colors.xml <<'XML'
          <resources>
            <color name="ic_launcher_background">#0B1220</color>
            <color name="ic_ring1">#22C55E</color>
            <color name="ic_ring2">#06B6D4</color>
            <color name="ic_ring3">#8B5CF6</color>
            <color name="ic_ring4">#F59E0B</color>

            <color name="avatar_user">#38BDF8</color>
            <color name="avatar_openai">#10B981</color>
            <color name="avatar_claude">#F97316</color>
            <color name="avatar_gemini">#A855F7</color>
            <color name="avatar_grok">#64748B</color>
          </resources>
          XML

      - name: ic_launcher_foreground.xml
        run: |
          cat > app/src/main/res/drawable/ic_launcher_foreground.xml <<'XML'
          <vector xmlns:android="http://schemas.android.com/apk/res/android"
              android:width="108dp" android:height="108dp"
              android:viewportWidth="108" android:viewportHeight="108">
            <group android:translateX="54" android:translateY="54">
              <path android:fillColor="@color/ic_ring4" android:pathData="M 0,-44 A 44,44 0 1,1 0,44 A 44,44 0 1,1 0,-44 Z"/>
              <path android:fillColor="@color/ic_ring3" android:pathData="M 0,-32 A 32,32 0 1,1 0,32 A 32,32 0 1,1 0,-32 Z"/>
              <path android:fillColor="@color/ic_ring2" android:pathData="M 0,-22 A 22,22 0 1,1 0,22 A 22,22 0 1,1 0,-22 Z"/>
              <path android:fillColor="@color/ic_ring1" android:pathData="M 0,-12 A 12,12 0 1,1 0,12 A 12,12 0 1,1 0,-12 Z"/>
            </group>
          </vector>
          XML

      - name: adaptive icons
        run: |
          cat > app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml <<'XML'
          <adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
            <background android:drawable="@color/ic_launcher_background"/>
            <foreground android:drawable="@drawable/ic_launcher_foreground"/>
          </adaptive-icon>
          XML
          cat > app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml <<'XML'
          <adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
            <background android:drawable="@color/ic_launcher_background"/>
            <foreground android:drawable="@drawable/ic_launcher_foreground"/>
          </adaptive-icon>
          XML

      # (Kotlin sources omitted for brevity; same as prior scaffold that passed M3 APIs)

      # ────────────────────────────────────────────────────────────────────────
      # Hotfix: force NavScaffold.kt to Material3-only (runs just before guards)
      # ────────────────────────────────────────────────────────────────────────
      - name: Hotfix NavScaffold to Material3-only
        run: |
          cat > app/src/main/java/com/example/aiconsciousness/nav/NavScaffold.kt <<'KT'
          package com.example.aiconsciousness.nav

          import androidx.compose.material.icons.Icons
          import androidx.compose.material.icons.filled.Chat
          import androidx.compose.material.icons.filled.Settings
          import androidx.compose.material.icons.filled.Tune
          import androidx.compose.material3.CenterAlignedTopAppBar
          import androidx.compose.material3.Icon
          import androidx.compose.material3.NavigationBar
          import androidx.compose.material3.NavigationBarItem
          import androidx.compose.material3.Scaffold
          import androidx.compose.material3.Surface
          import androidx.compose.material3.Text
          import androidx.compose.runtime.Composable
          import androidx.compose.ui.Modifier
          import androidx.compose.ui.unit.dp
          import androidx.navigation.NavHostController
          import androidx.navigation.compose.currentBackStackEntryAsState

          @Composable
          fun NavScaffold(nav: NavHostController, content: @Composable () -> Unit) {
            val route = nav.currentBackStackEntryAsState().value?.destination?.route
            Scaffold(
              topBar = { CenterAlignedTopAppBar(title = { Text("AI Consciousness") }) },
              bottomBar = {
                if (route != Dest.Setup.route) {
                  NavigationBar {
                    NavigationBarItem(
                      selected = route == Dest.Chat.route,
                      onClick = { nav.navigate(Dest.Chat.route) },
                      icon = { Icon(Icons.Filled.Chat, contentDescription = null) },
                      label = { Text("Chat") }
                    )
                    NavigationBarItem(
                      selected = route == Dest.Models.route,
                      onClick = { nav.navigate(Dest.Models.route) },
                      icon = { Icon(Icons.Filled.Tune, contentDescription = null) },
                      label = { Text("Models") }
                    )
                    NavigationBarItem(
                      selected = route == Dest.Settings.route,
                      onClick = { nav.navigate(Dest.Settings.route) },
                      icon = { Icon(Icons.Filled.Settings, contentDescription = null) },
                      label = { Text("Settings") }
                    )
                  }
                }
              }
            ) { inner ->
              Surface(tonalElevation = 0.dp, modifier = Modifier.padding(inner)) { content() }
            }
          }
          KT

      # ────────────────────────────────────────────────────────────────────────
      # Guards: ban Material 2 imports and old ListItem params
      # ────────────────────────────────────────────────────────────────────────
      - name: Install ripgrep
        run: sudo apt-get update && sudo apt-get install -y ripgrep

      - name: Compose Guard (ban Material 2 imports)
        run: |
          set -e
          OFFENDERS=$(rg -n "^import androidx\\.compose\\.material\\." app/src || true)
          if [[ -n "$OFFENDERS" ]]; then
            echo "❌ Material 2 imports are forbidden. Found in:"
            echo "$OFFENDERS"
            exit 1
          fi
          echo "✅ No Material 2 imports detected."

      - name: Compose Guard (no M2 ListItem params)
        run: |
          set -e
          BAD=$(rg -n "headlineText=|supportingText=|overlineText=" app/src || true)
          if [[ -n "$BAD" ]]; then
            echo "❌ Found Material 2 ListItem params:"
            echo "$BAD"
            exit 1
          fi
          echo "✅ ListItem parameters are Material3 style."

      # ────────────────────────────────────────────────────────────────────────
      # Android SDK & Build
      # ────────────────────────────────────────────────────────────────────────
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - name: Install Android cmdline-tools
        run: |
          set -eux
          mkdir -p "${ANDROID_SDK_ROOT}/cmdline-tools"
          cd "${ANDROID_SDK_ROOT}/cmdline-tools"
          curl -sSL https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -o cmdline-tools.zip
          unzip -q cmdline-tools.zip && rm cmdline-tools.zip
          if [ -d "cmdline-tools" ]; then mv cmdline-tools latest; fi

      - name: Accept SDK licenses
        run: |
          yes | "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager" --sdk_root="${ANDROID_SDK_ROOT}" --licenses >/dev/null 2>&1 || true

      - name: Install required SDK packages
        run: |
          set -eux
          SDKM="${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager"
          "$SDKM" --sdk_root="${ANDROID_SDK_ROOT}" --install "platform-tools"
          "$SDKM" --sdk_root="${ANDROID_SDK_ROOT}" --install "platforms;android-34"
          "$SDKM" --sdk_root="${ANDROID_SDK_ROOT}" --install "build-tools;34.0.0"

      - name: Build Debug APK
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: 8.4
          arguments: :app:assembleDebug

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: android-debug-apk
          path: app/build/outputs/apk/**/*-debug.apk
          if-no-files-found: error
          retention-days: 30

      - name: Commit & push scaffold
        run: |
          set -eux
          git add .
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git commit -m "Materialize AI Consciousness (locked Material3, guards in CI)"
          git push origin "$BRANCH"
